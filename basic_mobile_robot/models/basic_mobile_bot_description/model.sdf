<?xml version="1.0" ?>
<sdf version="1.5">
  <model name="basic_mobile_bot">
    <static>false</static>

    <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
    <pose>0.0 0.0 0.0 0.0 0.0 0.0</pose>
    <link name="base_footprint"/>
    <inertial>
      <inertia>
        <ixx>1</ixx>
        <ixy>0</ixy>
        <ixz>0</ixz>
        <iyy>0.62</iyy>
        <iyz>0</iyz>
        <izz>1</izz>
        <mass>0</mass>
      </inertia>
    </inertial>
    <!-- ********************** ROBOT BASE *********************************  -->
    <link name="base_link">
      <inertia>
        <ixx>15.271</ixx>
        <ixy>0</ixy>
        <ixz>0</ixz>
        <iyy>5.04489</iyy>
        <iyz>0</iyz>
        <izz>19.8279</izz>
      </inertia>
      <mass>40</mass>

      <collision name="base_collision">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/chassis.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </collision>

      <visual name="base_visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/chassis.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </visual>
    </link>

    <!-- ********************** Accessory Cage *********************************  -->
    <link name="cage_link">
      <pose>0 0 0.119 0 -0 0</pose>

      <collision name="cage_collision">
        <pose>0.0 0.0 0.0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/cage.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </collision>

      <visual name="cage_visual">
        <pose>0 0 0 0 0 0</pose>
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/cage.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </visual>
    </link>

    <!-- *********************** IMU SENSOR SETUP **************************  -->
    <link name="imu_link">
      <gravity>true</gravity>
      <sensor name="bmb_imu" type="imu">
        <always_on>true</always_on>
        <update_rate>100</update_rate>
        <visualize>true</visualize>
        <imu>
          <orientation>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-3</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-3</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-3</stddev>
              </noise>
            </z>
          </orientation>
          <angular_velocity>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>2e-4</stddev>
              </noise>
            </z>
          </angular_velocity>
          <linear_acceleration>
            <x>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </x>
            <y>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </y>
            <z>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1.7e-2</stddev>
              </noise>
            </z>
          </linear_acceleration>
        </imu>
        <plugin name="basic_mobile_bot_imu" filename="libgazebo_ros_imu_sensor.so">
          <initial_orientation_as_reference>false</initial_orientation_as_reference>
          <frame_name>imu_link</frame_name>
          <ros>
            <namespace>/imu</namespace>
            <remapping>~/out:=data</remapping>
          </ros>
        </plugin>
      </sensor>
    </link>

    <!-- *********************** GPS SETUP *********************************  -->
    <link name="gps_link">
      <sensor name="bmb_gps" type="gps">
        <always_on>true</always_on>
        <update_rate>10.0</update_rate>
        <gps>
          <position_sensing>
            <horizontal>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1e-2</stddev>
              </noise>
            </horizontal>
            <vertical>
              <noise type="gaussian">
                <mean>0.0</mean>
                <stddev>1</stddev>
              </noise>
            </vertical>
          </position_sensing>
        </gps>
        <plugin name="basic_mobile_bot_gps" filename="libgazebo_ros_gps_sensor.so">
          <ros>
            <remapping>~/out:=gps/fix</remapping>
          </ros>
        </plugin>
      </sensor>
    </link>

    <!-- ****************************** LIDAR *****************************    -->
    <link name="lidar_link">
      <inertial>
        <pose>0.3885 0 0.192 0 -0 0</pose>
        <inertia>
          <ixx>0.001</ixx>
          <ixy>0.000</ixy>
          <ixz>0.000</ixz>
          <iyy>0.001</iyy>
          <iyz>0.000</iyz>
          <izz>0.001</izz>
        </inertia>
        <mass>0.114</mass>
      </inertial>

      <collision name="lidar_collision">
        <pose>0.3885 0 0.192 0 -0 0</pose>
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/rplidar_s1.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </collision>

      <visual name="lidar_visual">
        <pose>0.3885 0 0.192 0 -0 0</pose>
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/rplidar_s1.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </visual>

      <sensor name="lidar" type="ray">
        <pose>0.3885 0 0.225 0 -0 0</pose>
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>5</update_rate>
        <ray>
          <scan>
            <horizontal>
              <samples>120</samples>
              <resolution>1.000000</resolution>
              <min_angle>-3.14159</min_angle>
              <max_angle>3.14159</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.3</min>
            <max>15.0</max>
            <resolution>0.015</resolution>
          </range>
          <noise>
            <type>gaussian</type>
            <mean>0.0</mean>
            <stddev>0.01</stddev>
          </noise>
        </ray>
        <plugin name="scan" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>lidar_link</frame_name>
        </plugin>
      </sensor>
    </link>

    <!-- *********************** DRIVE WHEELS ******************************  -->
    <link name="front_left_link">
      <pose>0.25 0.29815 -0.034 0 0 0</pose>

      <collision name="front_left_collision">
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/wheel.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </collision>

      <visual name="front_left_visual">
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/wheel.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </visual>
    </link>

    <link name="front_right_link">
      <pose>0.25 -0.29815 -0.034 0 0 0</pose>
      <inertia>
        <ixx>0.2467</ixx>
        <ixy>0</ixy>
        <ixz>0</ixz>
        <iyy>0.04411</iyy>
        <iyz>0</iyz>
        <izz>0.02467</izz>
      </inertia>

      <collision name="front_right_collision">
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/wheel.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </collision>

      <visual name="front_right_visual">
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/wheel.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </visual>
    </link>

    <link name="rear_left_link">
      <pose>-0.25 0.29815 -0.034 0 0 0</pose>
      <inertia>
        <ixx>0.2467</ixx>
        <ixy>0</ixy>
        <ixz>0</ixz>
        <iyy>0.04411</iyy>
        <iyz>0</iyz>
        <izz>0.02467</izz>
      </inertia>

      <collision name="rear_left_collision">
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/wheel.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </collision>

      <visual name="rear_left_visual">
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/wheel.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </visual>
    </link>

    <link name="rear_right_link">
      <pose>-0.25 -0.29815 -0.034 0 0 0</pose>
      <inertia>
        <ixx>0.2467</ixx>
        <ixy>0</ixy>
        <ixz>0</ixz>
        <iyy>0.04411</iyy>
        <iyz>0</iyz>
        <izz>0.02467</izz>
      </inertia>

      <collision name="rear_right_collision">
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/wheel.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </collision>

      <visual name="rear_right_visual">
        <geometry>
          <mesh>
            <uri>model://basic_mobile_bot_description/meshes/wheel.stl</uri>
            <scale>1.0 1.0 1.0</scale>
          </mesh>
        </geometry>
      </visual>
    </link>

    <!-- ************************ JOINTS ***********************************  -->
    <!-- Pose of the joint is the same as the child link frame -->
    <!-- Axis is the axis of rotation relative to the child link frame -->

    <joint name="base_joint" type="fixed">
      <parent>base_link</parent>
      <child>base_footprint</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>

    <joint name="cage_joint" type="fixed">
      <parent>base_link</parent>
      <child>cage_link</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>

    <joint name="front_left_joint" type="revolute">
      <parent>base_link</parent>
      <child>front_left_link</child>
      <pose>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>

    <joint name="front_right_joint" type="revolute">
      <parent>base_link</parent>
      <child>front_right_link</child>
      <pose>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>

    <joint name="rear_left_joint" type="revolute">
      <parent>base_link</parent>
      <child>rear_left_link</child>
      <pose>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>

    <joint name="rear_right_joint" type="revolute">
      <parent>base_link</parent>
      <child>rear_right_link</child>
      <pose>0 0 0 0 0 0</pose>
      <axis>
        <xyz>0 1 0</xyz>
      </axis>
    </joint>

    <joint name="imu_joint" type="fixed">
      <parent>base_link</parent>
      <child>imu_link</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>

    <joint name="gps_joint" type="fixed">
      <parent>base_link</parent>
      <child>gps_link</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>

    <joint name="lidar_joint" type="fixed">
      <parent>base_link</parent>
      <child>lidar_link</child>
      <pose>0 0 0 0 0 0</pose>
    </joint>

    <!-- *********************** WHEEL ODOMETRY ***************************    -->
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
    <updateRate>30.0</updateRate>
    <robotNamespace>/</robotNamespace>
    <robotBaseFrame>base_link</robotBaseFrame>
    <commandTopic>/cmd_vel</commandTopic>
    <odometryTopic>/odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <leftFrontJoint>front_left_wheel_joint</leftFrontJoint>
    <rightFrontJoint>front_right_wheel_joint</rightFrontJoint>
    <leftRearJoint>rear_left_wheel_joint</leftRearJoint>
    <rightRearJoint>rear_right_wheel_joint</rightRearJoint>
    <wheelSeparation>0.593</wheelSeparation>
    <wheelDiameter>0.349</wheelDiameter>
    <MaxForce>5.0</MaxForce>
    <torque>100</torque>
    <broadcastTF>1</broadcastTF>

      <ros>
        <remapping>odom:=wheel/odometry</remapping>
      </ros>
  </plugin>

    <!-- *********************** JOINT STATE PUBLISHER *********************   -->

    <plugin name="basic_mobile_bot_joint_state" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>30</update_rate>
      <joint_name>front_left_joint</joint_name>
      <joint_name>front_right_joint</joint_name>
      <joint_name>rear_left_joint</joint_name>
      <joint_name>rear_right_joint</joint_name>
    </plugin>

  </model>
</sdf>

    <!-- *********************** WHEEL ODOMETRY ***************************   
    <plugin name="basic_mobile_bot_diff_drive" filename="libgazebo_ros_diff_drive.so">

      <update_rate>30</update_rate>

      <!-- wheels -->
      <left_joint>rear_left_joint</left_joint>
      <right_joint>rear_right_joint</right_joint>

      <!-- kinematics -->
      <wheel_separation>0.52</wheel_separation>
      <wheel_diameter>0.28</wheel_diameter>

      <!-- limits -->
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>

      <!-- Receive velocity commands on this ROS topic -->
      <command_topic>cmd_vel</command_topic>

      <!-- output -->
      <!-- When false, publish no wheel odometry data to a ROS topic -->
      <publish_odom>true</publish_odom>

      <!-- When true, publish coordinate transform from odom to base_footprint -->
      <!-- I usually use the robot_localization package to publish this transform -->
      <publish_odom_tf>false</publish_odom_tf>

      <!-- When true, publish coordinate transform from base_link to the wheels -->
      <!-- The robot_state_publisher package is often used to publish this transform -->
      <publish_wheel_tf>false</publish_wheel_tf>

      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_link</robot_base_frame>

      <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <odometry_source>1</odometry_source>

      <!-- Change the ROS topic we will publish the odometry data to -->
      <ros>
        <remapping>odom:=wheel/odometry</remapping>
      </ros>

    </plugin> -->
